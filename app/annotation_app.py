import os
import re
import csv
import streamlit as st
import cv2
from PIL import Image
import datetime

st.set_page_config(
    page_title="annotating accident scene",
    page_icon="‚úèÔ∏è",
    #layout="wide",
    initial_sidebar_state="expanded",
    menu_items={}
)

t_delta = datetime.timedelta(hours=9)
JST = datetime.timezone(t_delta, 'JST')

annotator = ""

st.sidebar.subheader("config")
annotator = st.sidebar.text_input("Annotator:")

if annotator != "":
    anno_dir = "../dataset/mp4_videos"
    save_dir = f"../annotation/{annotator}/accident_scenes"
    mp4_list = sorted(os.listdir(anno_dir), key=lambda x: int(re.search(r'\d+', x).group()))
    total_cnt = len(mp4_list)
    csv_file_path = os.path.join("../annotation", annotator, "log.csv")
    
    
    scene_type = ["car-to-car", "car-to-bus", "car-to-track", "car-to-pedestrian", "car-to-motorbike", "car-to-bicycle", "property_accident", "ather", "bad_sample"]
    
    os.makedirs(save_dir, exist_ok=True)
    
    # CSV„Éï„Ç°„Ç§„É´„ÅÆË™≠„ÅøËæº„Åø„ÄÅÊó¢„Å´Ë©ï‰æ°Ê∏à„Åø„ÅÆ„Éá„Éº„Çø„Çí„Çπ„Ç≠„ÉÉ„Éó
    if os.path.exists(csv_file_path):
        with open(csv_file_path, 'r') as f:
            reader = csv.reader(f)
            existing_files = {row[0] for row in reader if row[0] != 'anno_file'}
    else:
        existing_files = set()
    mp4_list = [file for file in mp4_list if file not in existing_files] # Ë©ï‰æ°Ê∏à„Åø„ÇíÈô§Â§ñ
    remaining_cnt = len(mp4_list)
    
    if not mp4_list:
        st.write("„Åô„Åπ„Å¶„ÅÆÁîªÂÉè„ÅåË©ï‰æ°Ê∏à„Åø„Åß„Åô„ÄÇ")
        st.stop()
    
    anno_file = mp4_list[0]
    video_path = os.path.join(anno_dir, anno_file)
    video_name = os.path.splitext(anno_file)[0]
    
    video_file = open(video_path, 'rb')
    video_bytes = video_file.read()
    
    remaining_percent = (total_cnt-remaining_cnt)/total_cnt*100
    
    # „Éï„É¨„Éº„É†ÈÅ∏ÊäûÂü∫Ê∫ñ„ÅÆË°®Á§∫
    st.sidebar.subheader("infomation")
    st.sidebar.write(f"**Âá¶ÁêÜ‰∏≠ÂãïÁîªÔºö** {video_name}")
    st.sidebar.write(f"**ÈÄ≤ÊçóÔºö** {total_cnt-remaining_cnt} / {total_cnt}  ({remaining_percent:.2f} %)")
    
    st.sidebar.markdown("---")
    st.sidebar.subheader("„Éï„É¨„Éº„É†ÈÅ∏ÊäûÂü∫Ê∫ñ")
    st.sidebar.write("""
    „Ç¢„Éé„ÉÜ„Éº„Ç∑„Éß„É≥„Å´„Çà„ÇäÈÅ∏Êäû„Åó„Åü„Éï„É¨„Éº„É†„Åß„Å©„Çì„Å™‰∫ãÊïÖ„Åß„ÅÇ„Çã„Åã„ÅÆË™¨Êòé„ÇíË°å„ÅÜ„Åì„Å®„ÇíÁêÜÊÉ≥„Å®„Åô„Çã„ÄÇ
    „Åù„ÅÆ„Åü„ÇÅ‰∫ãÊïÖ„ÅÆÁû¨ÈñìÔºà‰æã: Ëªä„Å®‰∫∫„ÅåÊé•Ëß¶„Åó„ÅüÁû¨ÈñìÔºâ„ÇíÈÅ∏Êäû„Åô„Çã„ÅÆ„Åß„ÅØ„Å™„Åè„ÄÅ**„Åù„ÅÆÊï∞„Éï„É¨„Éº„É†Ââç„ÅÆÂèØËÉΩ„Å™Èôê„Çä„Éñ„É¨Ôºà„Åº„ÇÑ„ÅëÔºâ„ÅåÂ∞ë„Å™„ÅÑ„Éï„É¨„Éº„É†„ÇíÈÅ∏Êäû„Åô„Çã**„Åì„Å®„Å®„Åô„Çã„ÄÇ
    „Åì„Çå„Å´„Çà„Çä„ÄÅ‰∫ãÊïÖ„ÅÆÂÜÖÂÆπÔºà‰æã: Ëªä„Å®Ëªä„ÅÆÈñì„Åã„Çâ„ÅÆÈ£õ„Å≥Âá∫„ÅóÔºâ„Çí1„Éï„É¨„Éº„É†„ÅßÁ¢∫Ë™ç„Åß„Åç„Çã„ÄÇ
    """)
    
    st.sidebar.subheader("Èñ¢ÈÄ£‰∫ãÊïÖ„ÅÆÂü∫Ê∫ñ")
    st.sidebar.write("""
    - `True`ÔºöËªäËºâ„Ç´„É°„É©„ÅÆËªä„Åå‰∫ãÊïÖ„Å´Èñ¢‰∏é
    - `False`ÔºöËªäËºâ„Ç´„É°„É©„ÅÆËªä„ÅØ‰∫ãÊïÖ„Å´ÁÑ°Èñ¢‰∏é
    """)
    
    # ‰∫ãÊïÖ„Çø„Ç§„Éó„ÅÆÈÅ∏ÊäûÂü∫Ê∫ñ„ÅÆË°®Á§∫
    st.sidebar.subheader("‰∫ãÊïÖ„Çø„Ç§„Éó„ÅÆÈÅ∏ÊäûÂü∫Ê∫ñ")
    st.sidebar.write("""
    - `car-to-car`ÔºöËªä„Å®Ëªä„ÅÆ‰∫ãÊïÖ
    - `car-to-bus`ÔºöËªä„Å®„Éê„Çπ„ÅÆ‰∫ãÊïÖ
    - `car-to-track`ÔºöËªä„Å®„Éà„É©„ÉÉ„ÇØ„ÅÆ‰∫ãÊïÖ
    - `car-to-pedestrian`ÔºöËªä„Å®Ê≠©Ë°åËÄÖ„Å®„ÅÆ‰∫ãÊïÖ
    - `car-to-motorbike`ÔºöËªä„Å®„Éê„Ç§„ÇØ„Å®„ÅÆ‰∫ãÊïÖ
    - `car-to-bicycle`ÔºöËªä„Å®Ëá™Ëª¢Ëªä„Å®„ÅÆ‰∫ãÊïÖ
    - `property_accident`ÔºöÂØæÁâ©‰∫ãÊïÖ
    - `ather`Ôºö„Åù„ÅÆ‰ªñ
    - `bad_sample`ÔºöÂãïÁîª„Å®„Åó„Å¶‰∏çÊàêÁ´ã / Èô§Â§ñ
    """)
    
    st.title("annotating accident scene")
    
    st.write(f"üìº**video** : ÂÖ®‰Ωì„ÅÆÂãïÁîª„ÇíÁ¢∫Ë™ç ({video_name})")
    st.video(video_bytes)
    
    
    
    st.write("‚úèÔ∏è**annotation**")
    st.text("‰∫ãÊïÖ„ÅÆÁû¨Èñì„ÅÆ„Éï„É¨„Éº„É†„ÇíÈÅ∏Êäû")
    cap = cv2.VideoCapture(video_path)
    total_frames = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))
    frame_number = st.slider('„Éï„É¨„Éº„É†„Çí„Çπ„ÇØ„É≠„Éº„Çπ„Åó„Å¶ÈÅ∏Êäû / ‰∫ãÊïÖ„ÅÆÂÜÖÂÆπ„ÅÆ„Ç¢„Éé„ÉÜ„Éº„Ç∑„Éß„É≥ „ÇíË°å„ÅÑ[Á¢∫ÂÆö]Ôºé', 0, total_frames - 1, 0)
    
    
    cap.set(cv2.CAP_PROP_POS_FRAMES, frame_number)
    ret, frame = cap.read()
    
    if ret:
        frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    
        frame_image = Image.fromarray(frame)
        st.image(frame_image, caption=f"Frame {frame_number}", use_column_width=True)
    
        q1 = st.selectbox("accident scene type", scene_type, index=0)
        q2 = st.selectbox("ËªäËºâ„Ç´„É°„É©„ÅÆËªä„Åå‰∫ãÊïÖ„Å´Èñ¢‰∏é„Åó„Å¶„ÅÑ„Åæ„Åô„Åã? (Is the accident related?)", ["True", "False"], index=0)
    
        if st.button('Á¢∫ÂÆö'):
            save_path = os.path.join(save_dir, f"{video_name}.png")
            frame_image.save(save_path)
            st.write(f"„Éï„É¨„Éº„É† {frame_number} „Çí {save_path} „Å®„Åó„Å¶‰øùÂ≠ò„Åó„Åæ„Åó„Åü„ÄÇ")
    
            ## infomation
            # Ëß£ÂÉèÂ∫¶ (ÂπÖ x È´ò„Åï)
            width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
            height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
            # „Ç¢„Çπ„Éö„ÇØ„ÉàÊØî
            aspect_ratio = width / height
            # „Éï„É¨„Éº„É†„É¨„Éº„Éà (fps)
            fps = cap.get(cv2.CAP_PROP_FPS)
            # „Éï„É¨„Éº„É†Êï∞
            frame_count = int(cap.get(cv2.CAP_PROP_FRAME_COUNT)) 
            # ÂãïÁîª„ÅÆÈï∑„Åï (Áßí)
            duration = frame_count / fps if fps > 0 else 0
    
            # CSV„Éï„Ç°„Ç§„É´„Å´ËøΩÂä†
            new_row = [
                anno_file, 
                video_name, 
                total_frames,
                frame_number, 
                q1, 
                q2,
                aspect_ratio,
                width, 
                height, 
                fps,
                frame_count,
                duration, 
                annotator, 
                datetime.datetime.now(JST),
            ]
            with open(csv_file_path, 'a', newline='') as f:
                writer = csv.writer(f)
                if not os.path.exists(csv_file_path) or os.stat(csv_file_path).st_size == 0:
                    writer.writerow(["anno_file", 
                                     "video_name", 
                                     "total_frames", 
                                     "accident_frames", 
                                     "accident_scene_type", 
                                     "related_to_the_accident",
                                     "aspect_ratio", 
                                     "width", 
                                     "height", 
                                     "fps",
                                     "frame_count",
                                     "duration", 
                                     "annotator", 
                                     "annotation_date"])  # „Éò„ÉÉ„ÉÄ„ÉºËøΩÂä†
                writer.writerow(new_row)
    
            st.rerun()
    
    else:
        st.write("Unable to load frame.")
    
    # ÂãïÁîª„É™„ÇΩ„Éº„Çπ„ÇíËß£Êîæ
    cap.release()
    
    st.markdown("---")
    